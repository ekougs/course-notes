Docker intro
Run the command as its main process: PID 1
--rm for run deletes the (interactive or daemon) container when it's exited

docker container logs container_name_or_id

docker container top container_name_or_id

docker exec -it mydb sh : exécute sh sur mon container

docker build --tag <user/container_img_name:version> .

docker container --mount type=bind,source="$(pwd)",target=/usr/share/nginx/html $DOCKERID/linux_tweet_app:1.0
	Pour run un container et lier un dossier sur l'host à un autre dans le container

docker image ls -f reference="$DOCKERID/*"
	Rechercher une image par le champ référence

docker login -u username_or_docker_id

hyperv and vsphere container isolation (bare metal container deployment to hypervisor)





Swarm stack intro
docker swarm init --advertise-addr $(hostname -i)
	It gives a command to join the swarm

Les commandes docker stack, node, service se lancent auprès d'un noeud manager
docker node ls
	Against a swarm manager
	Shows the nodes' information in the swarm + their manager status

docker stack deploy --compose-file=docker-stack.yml voting_stack
	Voir https://github.com/docker/example-voting-app
	Déploie la stack dans le swarm

docker stack ls
	le nom de la stack + le nombre de services dessus

docker service ps voting_stack_vote
	Liste les tâches (replicas) du service vote sur la stack voting_stack
	Il donne notamment l'info du node sur lequel il est déployé

QCM
What is a stack?
[x]	a multi-service app running on a Swarm
[ ]	a way of creating multiple nodes
[ ]	a method of using multiple compose files to run an app

A stack can:
[x]	be deployed from the commandline
[x]	can use the compose file format to deploy
[ ]	can run a Dockerfile
[ ]	be used to manage your hosts
[x]	can be used to manage services over multiple nodes



Security Lab: Seccomp
seccomp sandboxes the containers limiting their access to syscall especially for simple containers/apps. Uses BPF (Berkeley Packet Filter) to do it.
Since 1.10.
docker run --security-opt seccomp=<profile>.json alpine sh
	Run the provided profile. The JSON is compiled using a thin Go wrapper around libseccomp in the daemon.
	There is a default profile that is used when nothing is provided for seccomp
Profiles define a whitelist of permitted syscalls
Add all capabilities and disable apparmor for profiles to be predictable as rules are only managed by seccomp
	AppArmor is a Linux security module associating profiles to each app to protect OS and its applications from security threats: --security-opt apparmor=unconfined.
	Capabilities management is a security mechanism in Linux to ensure privileges confinement: --cap-add ALL
Watch https://github.com/docker/labs directory labs/security/seccomp
The structure of the seccomp file can be deduced from the deserializer sources
	https://github.com/docker/engine-api/blob/c15549e10366236b069e50ef26562fb24f5911d4/types/seccomp.go
	https://github.com/opencontainers/runtime-spec/blob/master/specs-go/config.go#L357
Actions have precedence rules, from higher to lower:
Action	Description
SCMP_ACT_KILL	Kill with a exit status of 0x80 + 31 (SIGSYS) = 159
SCMP_ACT_TRAP	Send a SIGSYS signal without executing the system call
SCMP_ACT_ERRNO	Set errno without executing the system call
SCMP_ACT_TRACE	Invoke a ptracer to make a decision or set errno to -ENOSYS
SCMP_ACT_ALLOW	Allow
We can also act based on arguments of the syscall
{
    ...
    "syscalls": [
        {
            "name": "accept",
            "action": "SCMP_ACT_ALLOW",
            "args": [
                {
                    "index": 0,
                    "op": "SCMP_CMP_MASKED_EQ",
                    "value": 2080505856,
                    "valueTwo": 0
                }
            ]
        }
    ]
}
Index: of the syscall argument
op: operation to perform on the argument
	SCMP_CMP_NE - not equal
	SCMP_CMP_LT - less than
	SCMP_CMP_LE - less than or equal to
	SCMP_CMP_EQ - equal to
	SCMP_CMP_GE - greater than
	SCMP_CMP_GT - greater or equal to
	SCMP_CMP_MASKED_EQ - masked equal: true if (value & arg == valueTwo)
value is a parameter for the operation
valueTwo is only used for equality

Use strace to get the list of syscalls made by a program to write seccomp policies
Start with --security-opt no-new-privileges to prevent privileges gain through setuid binaries.
Syscall numbers are architecture dependent but docker profiles abstract this issue away. ptrace is disabled by default and should not be enabled.
--privileged disables seccomp, avoid it as it does too many things
